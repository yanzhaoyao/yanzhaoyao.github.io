{"meta":{"title":"Mr·Yan 的博客","subtitle":null,"description":"加油ヾ(◍°∇°◍)ﾉﾞ","author":"Mr·Yan","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-11-22T12:18:00.226Z","updated":"2018-11-22T12:18:00.226Z","comments":true,"path":"404.html","permalink":"http://yoursite.com/404.html","excerpt":"","text":""},{"title":"about","date":"2018-11-22T13:50:17.000Z","updated":"2018-11-22T13:50:17.996Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-22T13:55:57.400Z","updated":"2018-11-22T13:55:57.400Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-11-22T13:49:36.865Z","updated":"2018-11-22T13:49:36.865Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"七大Java架构专题","slug":"七大Java架构专题","date":"2018-11-22T12:29:41.000Z","updated":"2018-11-22T13:53:11.973Z","comments":true,"path":"2018/11/22/七大Java架构专题/","link":"","permalink":"http://yoursite.com/2018/11/22/七大Java架构专题/","excerpt":"","text":"一、源码分析简介：学习源码中所用到的经典的设计思想 常用设计模式 spring5 MyBatis Proxy 代理模式 IOC容器设计原理及高级特性 代码自动生成器 Factory 工厂模式 AOP设计原理 Mybtis关联查询、嵌套查询 Singleton 单例模式 FactoryBean与BeanFactory h Prototype 原型模式 Spring事物处理机制 Strategy 策略模式 基于SpringJDBC手写ORM框架 Delegate 委派模式 SpringMVC九大组件 Template 模板方法 SpringMVC与Struts2对比分析 Spring5新特性 二、分布式简介： 三、微服务架构简介：围绕微服务的通用模式，学习Spring Cloud的常见用法及原理 四、性能优化简介：从JVM底层原理到内存优化再到各个中间件的性能调优 五、工程化简介：工善欲其事必先利其器，选择好的工具，提升开发效率和团队协作效率，让自己有更多的时间来思考 六、多线程并发编程简介：深入了解底层实现原理 七、电商项目实战简介：大型电商分布式系统应用实战，利用云服务器搭建真实的开发和部署环境，提高动手能力","categories":[],"tags":[{"name":"hide","slug":"hide","permalink":"http://yoursite.com/tags/hide/"}]},{"title":"Hexo GitHub 搭建我的博客","slug":"Hexo-GitHub-搭建我的博客","date":"2018-11-20T15:08:15.000Z","updated":"2018-11-22T13:21:20.515Z","comments":true,"path":"2018/11/20/Hexo-GitHub-搭建我的博客/","link":"","permalink":"http://yoursite.com/2018/11/20/Hexo-GitHub-搭建我的博客/","excerpt":"","text":"一、前言​ 工作两年了，没有系统的学习过Java知识体系，现在对未来一年做了一个规划，搭建此博客，记录后续学习笔记，也算是为了锻炼自己的文字表达能力。 ​ 我曾经也用过OneNote、CSDN、博客园、写过博客，甚至自己打算写一个博客系统。当然以上都是半途而废…，我不想永远怎么颓废下去。我要开始执行我的未来规划。再半途而废，活该一辈子当码农 ​ 写这个开篇第一篇，就当练手了。还不太会用markdownb编辑器 ​ 废话不多话，为何我要搭建GitHub Pages博客？？？ 二、Github PagesGithub Pages 是面向用户、组织和项目开放的公共静态页面搭建托管服 务，站点可以被免费托管在 Github 上，你可以选择使用 Github Pages 默 认提供的域名 github.io 或者自定义域名来发布站点。Github Pages 支持 自动利用 Jekyll 生成站点，也同样支持纯 HTML 文档，将你的 Jekyll 站 点托管在 Github Pages 上是一个不错的选择。 三、开始搭建Github Pages1、注册属于你自己的Github账号​ 首先进入Github站点,然后进行注册(此处不做详细说明可自行阅读github教程：[1]注册github) 注册完毕后你就拥有了自己的代码仓库了. 2、创建仓库在Github首页右上角头像左侧加号点选择 New repositor(新存储库)或点击这里进行创建一个仓库. 3、开启Github Pages进入设置 找到这一块 当你的仓库名为：用户名.github.io 之后默认开启Github Pages 现在随便选择一个主题,选择上图的 Choose a theme 之后会跳转到下面这个页面 设置完毕后你就可以通过 username.github.io(username为你的用户名访问你的博客了) ## 接下来就需要搭建Hexo了 四、Hexo准备工作要使用Hexo,需要安装Nodejs以及Git 安装Node.js下载Node.js参考:安装Node.js 安装Git下载Git 一路点击Next就行了. 安装Hexo在你需要安装Hexo的目录下(新建一个文件夹)右键选择 Git Bash 12345npm install hexo-cli -g hexo init #初始化网站 npm install hexo g #生成或 hexo generate hexo s #启动本地服务器 或者 hexo server,这一步之后就可以通过http://localhost:4000 查看了 详细命令请参考Hexo文档 这里介绍一下怎么创建一篇文章 12hexo new &quot;文章名&quot; #新建文章hexo new page &quot;页面名&quot; #新建页面 常用简写 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 新建一篇文章后就可以预览了,在hexo new之后执行一次生成hexo g再执行hexo s启动本地服务器,如果之前还在hexo s 按Ctrl + C 结束. 添加主题我这里使用的主题是next，为什么使用next，我参考了这个博文 写的很好 安装主题(next主题):12hexo cleangit clone https://github.com/litten/hexo-theme-next.git themes/next 启动主题找到目录下的_config.yml 文件,打开找到 theme：属性并设置为next 更新主题1234cd themes/nextgit pullhexo ghexo s 此时刷新http://localhost:4000/页面就能看到新的主题了. 使用Hexo deploy部署到github还是编辑根目录下_config.yml文件 1234deploy: type: git repo: git@github.com:username/username.github.io.git #这里的网址填你自己的 branch: master 保存后需要提前安装一个扩展： 1npm install hexo-deployer-git --save 接下来就是将Hexo部署到我们的Github仓库上 部署到Github 1.检查SSH keys的设置以下命令均是在Git bash里输入 1cd ~/.ssh 输入上面命令后，如果出现： 1#ssh: No such file or directory 假如你你以前有了，会如下： 123456789ls#此时会显示一些文件mkdir key_backupcp id_rsa* key_backuprm id_rsa* #以上三步为备份和移除原来的SSH key设置ssh-keygen -t rsa -C &quot;邮件地址@youremail.com&quot; #生成新的key文件,邮箱地址填你的Github地址#Enter file in which to save the key (/Users/your_user_directory/.ssh/id_rsa):&lt;回车就好&gt;#接下来会让你输入密码（这里我建议自己的笔记本电脑就不要设置密码了，直接回车就行） 之后就可以看到成功的界面。 2.添加SSH Key到Github进入github首页 添加SSH Key。 找到 系统当前用户目录下(开启查看隐藏文件) C:\\Users\\用户名\\ .ssh id_rsa.pub文件以文本方式打开。打开之后全部复制到key中 到了这就可以测试一下是否成功了: 12ssh -T git@github.com#之后会要你输入yes/no,输入yes就好了。 设置你的账号信息: 12git config --global user.name &quot;你的名字&quot; #真实名字不是github用户名git config --global user.email &quot;邮箱@邮箱.com&quot; #github邮箱 3.部署到github1hexo d 这时再刷新 username.github.io 就可以看到你的博客了。 到了这你以为就结束了吗？没有，还有坑没有给你们填好。 六、最后的补充 电脑重装了系统/多台电脑写博客？那就赶紧戳这里使用hexo，如果换了电脑怎么更新博客？ 不知道如何编写Markdown语法？Markdown——入门指南 想要给网站添加图片？请把图片放入根目录 source\\ 下建立一个文件夹，当你执行hexo g的时候此文件夹自动生成到public中。","categories":[],"tags":[{"name":"博客搭建","slug":"博客搭建","permalink":"http://yoursite.com/tags/博客搭建/"},{"name":"GitHub Pages","slug":"GitHub-Pages","permalink":"http://yoursite.com/tags/GitHub-Pages/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-11-20T14:12:53.300Z","updated":"2018-11-20T12:54:16.184Z","comments":true,"path":"2018/11/20/hello-world/","link":"","permalink":"http://yoursite.com/2018/11/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}